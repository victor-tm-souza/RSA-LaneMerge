{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst CoordinatesRefresh = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  _s(useEffect(_s(() => {\n    _s();\n    const [message, setMessage] = useState(\"\");\n    const socket = new WebSocket('ws://localhost:7555');\n\n    // WebSocket event: connection established\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n    const interval = setInterval(() => {\n      socket.onmessage = event => {\n        setMessage(event.data);\n        console.log(message);\n      };\n    }, 10);\n\n    // WebSocket event: connection closed\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n    return () => {\n      clearInterval(interval);\n      socket.close();\n    };\n  }, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\"), []), \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n  return null; // or return a placeholder component if necessary\n};\n_s2(CoordinatesRefresh, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CoordinatesRefresh;\nexport default CoordinatesRefresh;\nvar _c;\n$RefreshReg$(_c, \"CoordinatesRefresh\");","map":{"version":3,"names":["useEffect","useState","CoordinatesRefresh","_s2","_s","$RefreshSig$","message","setMessage","socket","WebSocket","onopen","console","log","interval","setInterval","onmessage","event","data","onclose","clearInterval","close","_c","$RefreshReg$"],"sources":["/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst CoordinatesRefresh = () => {\n\n    useEffect(() => {\n        const [message, setMessage] = useState(\"\");\n        const socket = new WebSocket('ws://localhost:7555');\n\n        // WebSocket event: connection established\n        socket.onopen = () => {\n            console.log('WebSocket connection established.');\n        }\n\n        const interval = setInterval(() => {\n            socket.onmessage = (event) => {\n                setMessage(event.data);\n                console.log(message);\n            }\n        }, 10);\n\n        // WebSocket event: connection closed\n        socket.onclose = () => {\n            console.log('WebSocket connection closed.');\n        };\n\n        return () => {\n            clearInterval(interval);\n            socket.close();\n        };\n    }, []);\n\n    return null; // or return a placeholder component if necessary\n};\n\nexport default CoordinatesRefresh;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAE7BD,EAAA,CAAAJ,SAAS,CAAAI,EAAA,CAAC,MAAM;IAAAA,EAAA;IACZ,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;IAC1C,MAAMO,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAEnD;IACAD,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IACpD,CAAC;IAED,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BN,MAAM,CAACO,SAAS,GAAIC,KAAK,IAAK;QAC1BT,UAAU,CAACS,KAAK,CAACC,IAAI,CAAC;QACtBN,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;MACxB,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;;IAEN;IACAE,MAAM,CAACU,OAAO,GAAG,MAAM;MACnBP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C,CAAC;IAED,OAAO,MAAM;MACTO,aAAa,CAACN,QAAQ,CAAC;MACvBL,MAAM,CAACY,KAAK,CAAC,CAAC;IAClB,CAAC;EACL,CAAC,mCAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACjB,CAAC;AAACjB,GAAA,CA9BID,kBAAkB;AAAAmB,EAAA,GAAlBnB,kBAAkB;AAgCxB,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}