{"ast":null,"code":"var _jsxFileName = \"/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Marker } from 'react-leaflet';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction iconCar1() {\n  return L.icon({\n    iconUrl: require('../img/car.png'),\n    iconSize: new L.Point(40, 40)\n  });\n}\nfunction getCoordinates() {\n  _s();\n  useEffect(() => {\n    let socket = new WebSocket('ws://localhost:7555');\n    let message;\n    // WebSocket event: socket open\n    socket.onopen = () => {\n      console.log('WebSocket connection opened.');\n    };\n    const interval = setInterval(() => {\n      socket.onmessage = event => {\n        message = event.data;\n        console.log(message);\n        const lat = parseFloat(message.split(' ')[0]);\n        const lon = parseFloat(message.split(' ')[1]);\n        setNewCoordinates([lat, lon]);\n        console.log(newCoordinates);\n      };\n    }, 10);\n\n    // WebSocket event: connection closed\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n    return () => {\n      clearInterval(interval);\n      socket.close();\n    };\n  }, [newCoordinates]);\n  return newCoordinates;\n}\n_s(getCoordinates, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nconst CoordinatesRefresh = () => {\n  _s2();\n  const [newCoordinates, setNewCoordinates] = useState([40.644327187923224, -8.657387495040895]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      icon: iconCar1(),\n      position: newCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(CoordinatesRefresh, \"VThwe2f77CJO28USjt3U4vpdOSo=\");\n_c = CoordinatesRefresh;\nexport default CoordinatesRefresh;\nvar _c;\n$RefreshReg$(_c, \"CoordinatesRefresh\");","map":{"version":3,"names":["useEffect","useState","Marker","L","jsxDEV","_jsxDEV","Fragment","_Fragment","iconCar1","icon","iconUrl","require","iconSize","Point","getCoordinates","_s","socket","WebSocket","message","onopen","console","log","interval","setInterval","onmessage","event","data","lat","parseFloat","split","lon","setNewCoordinates","newCoordinates","onclose","clearInterval","close","CoordinatesRefresh","_s2","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Marker } from 'react-leaflet'\nimport L from 'leaflet';\n\nfunction iconCar1() {\n    return L.icon({\n        iconUrl: require('../img/car.png'),\n        iconSize: new L.Point(40, 40),\n    })\n}\n\nfunction getCoordinates() {\n\n    useEffect(() => {\n        let socket = new WebSocket('ws://localhost:7555');\n        let message;\n        // WebSocket event: socket open\n        socket.onopen = () => {\n            console.log('WebSocket connection opened.');\n        }\n\n        const interval = setInterval(() => {\n            socket.onmessage = (event) => {\n                message = event.data;\n                console.log(message);\n                const lat = parseFloat(message.split(' ')[0]);\n                const lon = parseFloat(message.split(' ')[1]);\n                setNewCoordinates([lat, lon]);\n                console.log(newCoordinates)\n            }\n        }, 10);\n\n        // WebSocket event: connection closed\n        socket.onclose = () => {\n            console.log('WebSocket connection closed.');\n        };\n\n        return () => {\n            clearInterval(interval);\n            socket.close();\n        };\n    }, [newCoordinates]);\n\n    return newCoordinates;\n}\n\nconst CoordinatesRefresh = () => {\n    const [newCoordinates, setNewCoordinates] = useState([40.644327187923224, -8.657387495040895]);\n\n    return (\n        <>\n            <Marker icon={iconCar1()} position={newCoordinates}></Marker>\n        </>\n    );\n\n};\n\nexport default CoordinatesRefresh;"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAChB,OAAOL,CAAC,CAACM,IAAI,CAAC;IACVC,OAAO,EAAEC,OAAO,CAAC,gBAAgB,CAAC;IAClCC,QAAQ,EAAE,IAAIT,CAAC,CAACU,KAAK,CAAC,EAAE,EAAE,EAAE;EAChC,CAAC,CAAC;AACN;AAEA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAEtBf,SAAS,CAAC,MAAM;IACZ,IAAIgB,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IACjD,IAAIC,OAAO;IACX;IACAF,MAAM,CAACG,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C,CAAC;IAED,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BP,MAAM,CAACQ,SAAS,GAAIC,KAAK,IAAK;QAC1BP,OAAO,GAAGO,KAAK,CAACC,IAAI;QACpBN,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;QACpB,MAAMS,GAAG,GAAGC,UAAU,CAACV,OAAO,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAMC,GAAG,GAAGF,UAAU,CAACV,OAAO,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7CE,iBAAiB,CAAC,CAACJ,GAAG,EAAEG,GAAG,CAAC,CAAC;QAC7BV,OAAO,CAACC,GAAG,CAACW,cAAc,CAAC;MAC/B,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;;IAEN;IACAhB,MAAM,CAACiB,OAAO,GAAG,MAAM;MACnBb,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C,CAAC;IAED,OAAO,MAAM;MACTa,aAAa,CAACZ,QAAQ,CAAC;MACvBN,MAAM,CAACmB,KAAK,CAAC,CAAC;IAClB,CAAC;EACL,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EAEpB,OAAOA,cAAc;AACzB;AAACjB,EAAA,CAjCQD,cAAc;AAmCvB,MAAMsB,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAM,CAACL,cAAc,EAAED,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,kBAAkB,EAAE,CAAC,iBAAiB,CAAC,CAAC;EAE9F,oBACII,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACIjC,OAAA,CAACH,MAAM;MAACO,IAAI,EAAED,QAAQ,CAAC,CAAE;MAAC+B,QAAQ,EAAEP;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC,gBAC/D,CAAC;AAGX,CAAC;AAACN,GAAA,CATID,kBAAkB;AAAAQ,EAAA,GAAlBR,kBAAkB;AAWxB,eAAeA,kBAAkB;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}