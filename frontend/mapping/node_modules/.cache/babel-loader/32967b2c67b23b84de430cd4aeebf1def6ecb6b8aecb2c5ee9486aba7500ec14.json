{"ast":null,"code":"var _jsxFileName = \"/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Marker } from 'react-leaflet';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction iconCircle() {\n  return L.icon({\n    iconUrl: require('../img/circle.png'),\n    iconSize: new L.Point(8, 8)\n  });\n}\nconst CoordinatesRefresh = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  //const [message, setMessage] = useState(\"\");\n\n  _s(useEffect(_s(() => {\n    _s();\n    const [newCoordinates, setNewCoordinates] = useState([40.644327187923224, -8.657387495040895]);\n    let socket = new WebSocket('ws://localhost:7555');\n    let message;\n\n    // WebSocket event: socket open\n    socket.onopen = () => {\n      console.log('WebSocket connection opened.');\n    };\n    const interval = setInterval(() => {\n      socket.onmessage = event => {\n        message = event.data;\n        console.log(message);\n        const lat = parseFloat(message.split(' ')[0]);\n        const lon = parseFloat(message.split(' ')[1]);\n        setNewCoordinates([lat, lon]);\n        console.log(newCoordinates);\n      };\n    }, 10);\n\n    // WebSocket event: connection closed\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n    return () => {\n      clearInterval(interval);\n      socket.close();\n    };\n  }, \"VThwe2f77CJO28USjt3U4vpdOSo=\"), [newCoordinates]), \"VThwe2f77CJO28USjt3U4vpdOSo=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      icon: iconCircle(),\n      position: [newCoordinates]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(CoordinatesRefresh, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CoordinatesRefresh;\nexport default CoordinatesRefresh;\nvar _c;\n$RefreshReg$(_c, \"CoordinatesRefresh\");","map":{"version":3,"names":["useEffect","useState","Marker","L","jsxDEV","_jsxDEV","Fragment","_Fragment","iconCircle","icon","iconUrl","require","iconSize","Point","CoordinatesRefresh","_s2","_s","$RefreshSig$","newCoordinates","setNewCoordinates","socket","WebSocket","message","onopen","console","log","interval","setInterval","onmessage","event","data","lat","parseFloat","split","lon","onclose","clearInterval","close","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Marker } from 'react-leaflet'\nimport L from 'leaflet';\n\nfunction iconCircle() {\n    return L.icon({\n        iconUrl: require('../img/circle.png'),\n        iconSize: new L.Point(8, 8),\n    })\n}\n\nconst CoordinatesRefresh = () => {\n    //const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n        const [newCoordinates, setNewCoordinates] = useState([40.644327187923224, -8.657387495040895]);\n        let socket = new WebSocket('ws://localhost:7555');\n        let message;\n\n        // WebSocket event: socket open\n        socket.onopen = () => {\n            console.log('WebSocket connection opened.');\n        }\n\n        const interval = setInterval(() => {\n            socket.onmessage = (event) => {\n                message = event.data;\n                console.log(message);\n                const lat = parseFloat(message.split(' ')[0]);\n                const lon = parseFloat(message.split(' ')[1]);\n                setNewCoordinates([lat, lon]);\n                console.log(newCoordinates)\n            }\n        }, 10);\n\n        // WebSocket event: connection closed\n        socket.onclose = () => {\n            console.log('WebSocket connection closed.');\n        };\n\n        return () => {\n            clearInterval(interval);\n            socket.close();\n        };\n    }, [newCoordinates]);\n\n    return (\n        <>\n            <Marker icon={iconCircle()} position={[newCoordinates]}></Marker>\n        </>);\n\n};\n\nexport default CoordinatesRefresh;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,UAAUA,CAAA,EAAG;EAClB,OAAOL,CAAC,CAACM,IAAI,CAAC;IACVC,OAAO,EAAEC,OAAO,CAAC,mBAAmB,CAAC;IACrCC,QAAQ,EAAE,IAAIT,CAAC,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC;EAC9B,CAAC,CAAC;AACN;AAEA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC7B;;EAEAD,EAAA,CAAAhB,SAAS,CAAAgB,EAAA,CAAC,MAAM;IAAAA,EAAA;IACZ,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,kBAAkB,EAAE,CAAC,iBAAiB,CAAC,CAAC;IAC9F,IAAImB,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IACjD,IAAIC,OAAO;;IAEX;IACAF,MAAM,CAACG,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C,CAAC;IAED,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BP,MAAM,CAACQ,SAAS,GAAIC,KAAK,IAAK;QAC1BP,OAAO,GAAGO,KAAK,CAACC,IAAI;QACpBN,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;QACpB,MAAMS,GAAG,GAAGC,UAAU,CAACV,OAAO,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAMC,GAAG,GAAGF,UAAU,CAACV,OAAO,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7Cd,iBAAiB,CAAC,CAACY,GAAG,EAAEG,GAAG,CAAC,CAAC;QAC7BV,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;MAC/B,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;;IAEN;IACAE,MAAM,CAACe,OAAO,GAAG,MAAM;MACnBX,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C,CAAC;IAED,OAAO,MAAM;MACTW,aAAa,CAACV,QAAQ,CAAC;MACvBN,MAAM,CAACiB,KAAK,CAAC,CAAC;IAClB,CAAC;EACL,CAAC,mCAAE,CAACnB,cAAc,CAAC,CAAC;EAEpB,oBACIb,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACIjC,OAAA,CAACH,MAAM;MAACO,IAAI,EAAED,UAAU,CAAC,CAAE;MAAC+B,QAAQ,EAAE,CAACrB,cAAc;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC,gBACnE,CAAC;AAEX,CAAC;AAAC5B,GAAA,CAxCID,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AA0CxB,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}