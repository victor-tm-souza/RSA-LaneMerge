{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport WebSocket from 'websocket';\nconst CoordinatesRefresh = () => {\n  _s();\n  const [coordinates, setCoordinates] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8000'); // Replace with your WebSocket server URL\n\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    ws.onmessage = event => {\n      const data = event.data;\n      const [lat, lon] = data.split(',');\n      setCoordinates([parseFloat(lat), parseFloat(lon)]);\n      console.log([lat, lon]);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      ws.close();\n    };\n  }, []);\n};\n_s(CoordinatesRefresh, \"mUTlqyO1NJz5A08+7KZJPXLZaSM=\");\n_c = CoordinatesRefresh;\nexport default CoordinatesRefresh;\nvar _c;\n$RefreshReg$(_c, \"CoordinatesRefresh\");","map":{"version":3,"names":["React","useEffect","useState","WebSocket","CoordinatesRefresh","_s","coordinates","setCoordinates","ws","onopen","console","log","onmessage","event","data","lat","lon","split","parseFloat","onclose","close","_c","$RefreshReg$"],"sources":["/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport WebSocket from 'websocket';\n\nconst CoordinatesRefresh = () => {\n    const [coordinates, setCoordinates] = useState([]);\n\n    useEffect(() => {\n        const ws = new WebSocket('ws://localhost:8000'); // Replace with your WebSocket server URL\n\n        ws.onopen = () => {\n            console.log('WebSocket connection opened');\n        };\n\n        ws.onmessage = (event) => {\n            const data = event.data;\n            const [lat, lon] = data.split(',');\n            setCoordinates([parseFloat(lat), parseFloat(lon)]);\n            console.log([lat, lon])\n        };\n\n        ws.onclose = () => {\n            console.log('WebSocket connection closed');\n        };\n\n        // Clean up the WebSocket connection when the component unmounts\n        return () => {\n            ws.close();\n        };\n    }, []);\n\n};\n\nexport default CoordinatesRefresh;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,WAAW;AAEjC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMO,EAAE,GAAG,IAAIL,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;;IAEjDK,EAAE,CAACC,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;IAEDH,EAAE,CAACI,SAAS,GAAIC,KAAK,IAAK;MACtB,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;MACvB,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;MAClCV,cAAc,CAAC,CAACW,UAAU,CAACH,GAAG,CAAC,EAAEG,UAAU,CAACF,GAAG,CAAC,CAAC,CAAC;MAClDN,OAAO,CAACC,GAAG,CAAC,CAACI,GAAG,EAAEC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEDR,EAAE,CAACW,OAAO,GAAG,MAAM;MACfT,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;;IAED;IACA,OAAO,MAAM;MACTH,EAAE,CAACY,KAAK,CAAC,CAAC;IACd,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,kBAAkB;AAAAiB,EAAA,GAAlBjB,kBAAkB;AA6BxB,eAAeA,kBAAkB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}