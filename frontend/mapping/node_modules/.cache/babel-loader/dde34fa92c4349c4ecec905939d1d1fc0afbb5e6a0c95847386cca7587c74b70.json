{"ast":null,"code":"var _jsxFileName = \"/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Marker } from 'react-leaflet';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction iconCar1() {\n  return L.icon({\n    iconUrl: require('../img/car.png'),\n    iconSize: new L.Point(40, 40)\n  });\n}\nconst CoordinatesRefresh = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    myId\n  } = _ref;\n  const [newCoordinates, setNewCoordinates] = _s(useState(_s(myId => {\n    _s();\n    if (myId == 1) {\n      const [newCoordinates, setNewCoordinates] = useState([40.644383969178094, -8.657294154167177]);\n    } else if (myId == 2) {\n      const [newCoordinates, setNewCoordinates] = useState([40.64434932042932, -8.657415993511679]);\n    } else {\n      const [newCoordinates, setNewCoordinates] = useState([40.644431929818374, -8.657282797450371]);\n    }\n  }, \"NYrruHmCZxTFg3RC39eiyAADE4w=\")), \"NYrruHmCZxTFg3RC39eiyAADE4w=\");\n  useEffect(() => {\n    let socket = new WebSocket('ws://localhost:7555');\n    let message;\n    // WebSocket event: socket open\n    socket.onopen = () => {\n      //console.log('WebSocket connection opened.');\n    };\n\n    // Function to handle incoming messages\n    socket.onmessage = event => {\n      message = event.data;\n      const id = parseInt(message.split(' ')[0]);\n      if (myId == id) {\n        const lat = parseFloat(message.split(' ')[1]);\n        const lon = parseFloat(message.split(' ')[2]);\n        setNewCoordinates([lat, lon]);\n        console.log(newCoordinates);\n      }\n    };\n\n    // WebSocket event: connection closed\n    socket.onclose = () => {\n      //console.log('WebSocket connection closed.');\n    };\n    return () => {\n      socket.close();\n    };\n  }, [newCoordinates]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      icon: iconCar1(),\n      position: newCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(CoordinatesRefresh, \"9ECCKCi+FUSAzueoU1AifXM1zlo=\");\n_c = CoordinatesRefresh;\nexport default CoordinatesRefresh;\nvar _c;\n$RefreshReg$(_c, \"CoordinatesRefresh\");","map":{"version":3,"names":["useEffect","useState","Marker","L","jsxDEV","_jsxDEV","Fragment","_Fragment","iconCar1","icon","iconUrl","require","iconSize","Point","CoordinatesRefresh","_ref","_s2","_s","$RefreshSig$","myId","newCoordinates","setNewCoordinates","socket","WebSocket","message","onopen","onmessage","event","data","id","parseInt","split","lat","parseFloat","lon","console","log","onclose","close","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/victms/Desktop/uni/RSA/projeto/project-RSA/frontend/mapping/src/components/CoordinatesRefresh.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Marker } from 'react-leaflet'\nimport L from 'leaflet';\n\nfunction iconCar1() {\n    return L.icon({\n        iconUrl: require('../img/car.png'),\n        iconSize: new L.Point(40, 40),\n    })\n}\n\nconst CoordinatesRefresh = ({ myId }) => {\n    const [newCoordinates, setNewCoordinates] = useState((myId) => {\n        if (myId == 1) {\n            const [newCoordinates, setNewCoordinates] = useState([40.644383969178094, -8.657294154167177]);\n        } else if (myId == 2) {\n            const [newCoordinates, setNewCoordinates] = useState([40.64434932042932, -8.657415993511679]);\n        } else {\n            const [newCoordinates, setNewCoordinates] = useState([40.644431929818374, -8.657282797450371]);\n        }\n    });\n\n    useEffect(() => {\n        let socket = new WebSocket('ws://localhost:7555');\n        let message;\n        // WebSocket event: socket open\n        socket.onopen = () => {\n            //console.log('WebSocket connection opened.');\n        }\n\n        // Function to handle incoming messages\n        socket.onmessage = event => {\n            message = event.data;\n            const id = parseInt(message.split(' ')[0])\n            if (myId == id) {\n                const lat = parseFloat(message.split(' ')[1]);\n                const lon = parseFloat(message.split(' ')[2]);\n                setNewCoordinates([lat, lon]);\n                console.log(newCoordinates);\n            }\n        };\n\n\n        // WebSocket event: connection closed\n        socket.onclose = () => {\n            //console.log('WebSocket connection closed.');\n        };\n\n        return () => {\n            socket.close();\n        };\n    }, [newCoordinates]);\n\n    return (\n        <>\n            <Marker icon={iconCar1()} position={newCoordinates} />\n        </>\n    );\n\n};\n\nexport default CoordinatesRefresh;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}